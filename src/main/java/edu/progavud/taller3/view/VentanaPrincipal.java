package edu.progavud.taller3.view;

import edu.progavud.taller3.controller.ControlVentana;
import javax.swing.JOptionPane;

/**
 * @author Jorge Mendez
 * @author Julian Roldan
 * @author Jose Cucanchon
 * @version 1.0
 * 
 * Clase JFrame donde van a estar contenidos todos los paneles
 * siendo estos cambiados a traves de sustitucion de liskov
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private ControlVentana cVentana;
    /**
     * Constructor de la VentanaPrincipal, inicializa sus atributos
     * @param cVentana Recibe el parametro que permite la comunicacion con el ControlVentana
     */
    public VentanaPrincipal(ControlVentana cVentana) {
        this.cVentana = cVentana;
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setVisible(true);
    }
    /**
     * Método que a traves de sustitucion de liskov
     * permite cargar el PanelInicio
     */
    public void cargarPanelInicio() {
        this.getContentPane().removeAll();
        panelCanvas = new PanelInicio();
        setSize(panelCanvas.getPreferredSize());
        add(panelCanvas);
        cVentana.asignarOyentesPanelInicio();
        revalidate();
        repaint();
    }
    
    /**
     * Método que a traves de sustitucion de liskov
     * permite cargar el PanelCarrera
     * @param numJugadores Recibe la cantidad de competidores actuales
     */
    public void cargarPanelCarrera(int numJugadores) {
        this.getContentPane().removeAll();
        panelCanvas = new PanelCarrera(numJugadores);
        setSize(panelCanvas.getSize());
        add(panelCanvas);
        ((PanelCarrera) panelCanvas).cargarImagenFondo();
        cVentana.crearImagenesCompetidores();
        ((PanelCarrera) panelCanvas).colocarCompetidores();
        cVentana.asignarOyentesPanelCarrera();
        revalidate();
        repaint();
    }
    /**
     * Método que a traves de sustitucion de liskov
     * permite cargar el PanelInicio
     * @param mensajeGanador Recibe el mensaje que indica quien fue el
     *                       ganador de la ultima carrera
     */
    public void cargarPanelFinal(String mensajeGanador) {
        this.getContentPane().removeAll();
        panelCanvas = new PanelFinal();
        setSize(panelCanvas.getPreferredSize());
        ((PanelFinal) panelCanvas).txtaGanador.setText(mensajeGanador);
        add(panelCanvas);
        cVentana.asignarOyentesPanelFinal();
        revalidate();
        repaint();
    }
    /**
     * Muestra un input dialog con el fin de ingresar el numero de competidores
     * @return Devuelve un String que será casteado como un int eventualmente
     */
    public String mostrarDigiteNumCompetidores() {
        return JOptionPane.showInputDialog(null, "Digite el numero Udistritalinosos que van a competir: ", JOptionPane.DEFAULT_OPTION);
    }
    /**
     * Muestra un input dialog con el fin de ingresar el nombre de los competidores
     * @return Devuelve un String que contiene el nombrede los competidores
     */
    public String mostrarDigiteNomCompetidor() {
        return JOptionPane.showInputDialog(null, "Digite el nombre del Udistritalinoso que va a competir: ", JOptionPane.DEFAULT_OPTION);
    }
    /**
     * Muestra un message dialog para hacerle saber al usuario de cualquier situacion
     * @param mensaje Recibe el mensaje que se va a mostrar
     */
    public void mostrarMensajeJOptionPane(String mensaje) {
        JOptionPane.showMessageDialog(null, mensaje);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCanvas = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelCanvas.setBackground(new java.awt.Color(15, 89, 45));
        panelCanvas.setPreferredSize(new java.awt.Dimension(1000, 600));

        javax.swing.GroupLayout panelCanvasLayout = new javax.swing.GroupLayout(panelCanvas);
        panelCanvas.setLayout(panelCanvasLayout);
        panelCanvasLayout.setHorizontalGroup(
            panelCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        panelCanvasLayout.setVerticalGroup(
            panelCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        getContentPane().add(panelCanvas, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel panelCanvas;
    // End of variables declaration//GEN-END:variables
}
